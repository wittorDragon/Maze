import turtle
import time
import keyboard

class MazeGame:
    def __init__(self):
        self.maze = [
            ["X", "X", "X", "X", "X", "X", "X"],
            ["X", " ", " ", " ", "X", " ", "X"],
            ["X", " ", "X", " ", "X", " ", " "],
            ["X", " ", "X", " ", "X", " ", "X"],
            ["X", " ", "X", " ", " ", " ", "X"],
            ["X", " ", "X", "X", "X", "X", "X"],
        ]
        self.ply = (5, 1)  # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (row, col)
        self.end = (2, 6)  # ‡∏à‡∏∏‡∏î‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î

        self.cell_size = 40  # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï
        self.t = turtle.Turtle()
        self.screen = turtle.Screen()
        self.screen.tracer(0)  # ‡∏õ‡∏¥‡∏î animation ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
        self.draw_maze()
        self.draw_player()

    def draw_maze(self):
        """ ‡∏ß‡∏≤‡∏î‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• """
        self.t.penup()
        self.t.goto(-self.cell_size * len(self.maze[0]) // 2, self.cell_size * len(self.maze) // 2)
        
        for y, row in enumerate(self.maze):
            for x, cell in enumerate(row):
                self.t.goto(-self.cell_size * (len(row) // 2 - x), self.cell_size * (len(self.maze) // 2 - y))
                if cell == "X":  # ‡∏Å‡∏≥‡πÅ‡∏û‡∏á
                    self.t.pendown()
                    self.t.fillcolor("black")
                    self.t.begin_fill()
                    for _ in range(4):
                        self.t.forward(self.cell_size)
                        self.t.right(90)
                    self.t.end_fill()
                    self.t.penup()
                elif (y, x) == self.end:  # ‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢
                    self.t.write("E", align="center", font=("Arial", 16, "bold"))

    def draw_player(self):
        """ ‡∏ß‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô """
        y, x = self.ply
        self.t.penup()
        self.t.goto(-self.cell_size * (len(self.maze[0]) // 2 - x) + self.cell_size // 2,
                    self.cell_size * (len(self.maze) // 2 - y) - self.cell_size // 2)
        self.t.pendown()
        self.t.fillcolor("blue")
        self.t.begin_fill()
        self.t.circle(self.cell_size // 4)  # ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°
        self.t.end_fill()
        self.t.penup()
        self.screen.update()

    def move_player(self, dy, dx):
        """ ‡∏¢‡πâ‡∏≤‡∏¢‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô """
        y, x = self.ply
        new_y, new_x = y + dy, x + dx

        if 0 <= new_y < len(self.maze) and 0 <= new_x < len(self.maze[0]) and self.maze[new_y][new_x] != "X":
            self.ply = (new_y, new_x)
            self.t.clear()
            self.draw_maze()
            self.draw_player()

            if self.ply == self.end:
                print("üéâ Congraturation! You won!")
                self.t.goto(0, 0)
                self.t.write("You Won!", align="center", font=("Arial", 24, "bold"))
                time.sleep(2)
                turtle.bye()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
game = MazeGame()

# ‡∏à‡∏±‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
keyboard.add_hotkey("w", lambda: game.move_player(-1, 0))  # ‡∏Ç‡∏∂‡πâ‡∏ô
keyboard.add_hotkey("s", lambda: game.move_player(1, 0))   # ‡∏•‡∏á
keyboard.add_hotkey("a", lambda: game.move_player(0, -1))  # ‡∏ã‡πâ‡∏≤‡∏¢
keyboard.add_hotkey("d", lambda: game.move_player(0, 1))   # ‡∏Ç‡∏ß‡∏≤

turtle.mainloop()  # ‡∏£‡∏±‡∏ô‡πÄ‡∏Å‡∏°

